name: Test UI

on: push
env:
  REG_NOTIFY_CLIENT_ID: ${{ secrets.REG_NOTIFY_CLIENT_ID }}

jobs:
  install:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 18
      - name: Cache node_modules
        uses: actions/cache@v3
        id: node_modules_cache
        with:
          path: node_modules
          key: ${{ runner.os }}-${{ hashFiles('**/package-lock.json') }}
      - name: Install dependencies
        if: steps.node_modules_cache.outputs.cache-hit != 'true'
        run: npm ci
  prepare:
    name: Prepare develop branch screenshots
    runs-on: ubuntu-latest
    steps:
      - name: setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: checkout develop branch
        uses: actions/checkout@v3
        with:
          ref: develop
          fetch-depth: 0

      - name: check commit hash
        id: commithash
        run: echo "::set-output name=hash::$(git rev-parse HEAD)"

      - name: restore reg-suit screenshots
        uses: actions/cache@v2
        with:
          path: .reg/
          key: reg-${{ steps.commithash.outputs.hash }}-v7

      - name: Check file existence
        id: check_files
        uses: andstor/file-existence-action@v1
        with:
          files: ".reg/"

      - name: npm install develop branch
        if: steps.check_files.outputs.files_exists == 'false'
        run: npm ci

      - name: Build Storybook
        run: npm run storybook:build --quiet

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@master
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-1

      - name: screenshots develop branch
        if: steps.check_files.outputs.files_exists == 'false'
        run: npm run vrt:snapshot

      - name: run reg-suit develop branch
        if: steps.check_files.outputs.files_exists == 'false'
        run: npm run vrt:run

      - name: set reg-suit expected
        run: |
          rm -rf .reg/expected/
          mv -f .reg/actual/ .reg/expected/
          mkdir .reg/actual/
          ls -l .reg/

      - name: upload .reg/
        uses: actions/upload-artifact@v2
        with:
          name: reg-expected
          path: .reg/

  vrt-storybook:
    name: Run reg-suit
    needs: prepare
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: workaround for detached HEAD
        if: ${{ github.event_name == 'pull_request' }}
        run: |
          git checkout ${GITHUB_HEAD_REF#refs/heads/} || git checkout -b ${GITHUB_HEAD_REF#refs/heads/} && git pull

      - name: Restore node_modules
        id: node_modules_cache
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-${{ hashFiles('**/package-lock.json') }}

      - name: load reg-suit expecteds
        uses: actions/download-artifact@v2
        with:
          name: reg-expected
          path: .reg/

      - name: Build Storybook
        run: npm run storybook:build --quiet

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@master
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-1

      - name: screenshots
        run: npm run vrt:snapshot

      - name: run reg-suit
        run: npm run vrt:run

      - name: upload reg-suit
        uses: actions/upload-artifact@v2
        with:
          name: visual regression test result
          path: .reg/
